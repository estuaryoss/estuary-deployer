version: "3.3"

services:
  estuary-deployer:
    container_name: estuary-deployer
    image: estuaryoss/deployer:latest
    hostname: estuary-deployer
#    entrypoint: tail -f /etc/alpine-release
    environment:
#      FLUENTD_IP_PORT: '10.133.14.238:24224'
      limit: 'sky' # example env var inserted. you can read it with environ('limit')
      MAX_DEPLOYMENTS: 3 # how many deployments to be done. Useful for VMs where user knows how much resources a docker-compose env use.
      #for eureka registering
      EUREKA_SERVER: http://eureka-server:8080/eureka/v2 #your eureka server
      APP_APPEND_LABEL: LAB_2GB_RAM # this suffix will be added to the deployer service in order to differentiate between different services mapped on VM with specific resources
      APP_IP_PORT: estuary-deployer:8080 #your app details: where it is and on which port. needed for service discovery and spread of tests from the test client
      ENV_EXPIRE_IN=1
#    entrypoint: python3 /scripts/main_flask.py
    command: bash -c "sleep 20 && /root/deployer/main-linux"
    volumes:
      - ./inputs/templates:/scripts/inputs/templates
      - ./inputs/variables:/scripts/inputs/variables
#      - ./:/scripts/
      - /var/run/docker.sock:/var/run/docker.sock # works on win also as long as you don't enable tcp daemon on 2375/2376
#      - ./tmp:/tmp
    ports:
      - "8081:8080"
    expose:
      - "8080"

  eureka-server:
    container_name: eureka-server
    image: estuaryoss/netflix-eureka:1.10.5
    hostname: eureka-server
    ports:
      - "8080:8080"
    expose:
      - "8080"